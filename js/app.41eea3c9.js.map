{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/modules/index.js","webpack:///./src/App.vue?c6e7","webpack:///./src/components/ModelGraph.vue?7d88","webpack:///./src/utils/util.js","webpack:///src/components/ModelGraph.vue","webpack:///./src/components/ModelGraph.vue?85d0","webpack:///./src/components/ModelGraph.vue","webpack:///./src/components/Editor.vue?96e9","webpack:///src/components/Editor.vue","webpack:///./src/components/Editor.vue?145f","webpack:///./src/components/Editor.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/components/Editor.vue?b5b1","webpack:///./src/components/ModelGraph.vue?cd9c","webpack:///./src/utils/onnx.js","webpack:///./src/store/modules/Model.js","webpack:///./src/App.vue?0cdf","webpack:///./src/store/modules sync nonrecursive \\.js$"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","files","require","keys","forEach","replace","default","Appvue_type_template_id_ccd9eeba_render","_vm","this","_h","$createElement","_c","_self","attrs","id","_m","staticClass","staticStyle","color","_v","_s","opTotal","paramTotal","nodeInfo","max-height","overflow-y","_l","layer","index","k","v","href","numOps","numParams","_e","staticRenderFns","role","aria-label","ModelGraphvue_type_template_id_fcf59852_render","position","on","click","exportSvg","min-height","ModelGraphvue_type_template_id_fcf59852_staticRenderFns","genUID","uid","Math","random","toString","substring","formatter","val","toFixed","util","mergeable_nodes","name_map","BatchNormalization","AveragePool","GlobalAveragePool","page","computed","_objectSpread","vuex_esm","methods","saveSvgAsPng_default","a","saveSvgAsPng","d3","node","backgroundColor","watch","nodes","newList","oldList","activBlock","parent","bbox","w","h","width","height","shapeSvg","insert","attr","textSvg","text","style","nodeClick","$store","commit","param_list","intersect","point","dagre_d3","rect","edges","output_source","maxOps","maxParams","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","outputs","inputs","op","parent_nodes","inp_name","parent_id","String","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_out_name","err","return","includes","_parent_id","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","out_name","_i3","_nodes2","params","_parent_id2","shape","source","target","g","Graph","setGraph","ranker","_i","_nodes","_node","setNode","label","repeat","ops","_i2","_edges","edge","setEdge","arrowhead","curve","labelpos","svg","parentNode","scrollHeight","scrollWidth","inner","select","render","shapes","padding","top","bottom","left","right","selectAll","each","labelGroup","getBBox","x","y","opsData","paramsData","nodeHeight","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","node_id","_node2","elem","console","log","entries","map","_ref","_ref2","slicedToArray","_ref3","_ref4","sort","b","parseFloat","_label","tooltip","append","area","line","opsText","paramsText","paramsTextOffset","y1","x0","y0","datum","mouse","minDist","Infinity","matchingY","opsVal","paramVal","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","dist","abs","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_d","_dist","graph","initialScale","getBoundingClientRect","zoom","transform","translate","scale","ModelGraphvue_type_script_lang_js_","components_ModelGraphvue_type_script_lang_js_","component","componentNormalizer","ModelGraph","Editorvue_type_template_id_7adf18b3_render","ref","type","change","setOnnx","fileName","compileStatus","options","cmOptions","model","callback","$$v","code","expression","Editorvue_type_template_id_7adf18b3_staticRenderFns","protobuf","initialCode","Editorvue_type_script_lang_js_","components","codemirror","vue_codemirror","modifiedCode","tabSize","json","theme","lineNumbers","extraKeys","Shift-Enter","process","mounted","Editorvue_type_script_lang_js_objectSpread","$refs","myCm","getters","set","newValue","modelDef","JSON","parse","error","ev","_this","load","root","onnxRoot","file","reader","FileReader","onload","event","buffer","Uint8Array","currentTarget","ModelProto","lookupType","onnxModel","decode","readAsArrayBuffer","components_Editorvue_type_script_lang_js_","Editor_component","Editor","Appvue_type_script_lang_js_protobuf","Appvue_type_script_lang_js_page","loading","loaded","model-graph","editor","Appvue_type_script_lang_js_objectSpread","totalOps","totalParams","Appvue_type_script_lang_js_","src_Appvue_type_script_lang_js_","App_component","App","Vue","use","Vuex","store","Store","strict","config","productionTip","VueApexCharts","VueCytoscape","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Editor_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Editor_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ModelGraph_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ModelGraph_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Int64LE","protoGenNode","nodeProto","input_names","opType","output","out_channels","stride","kernel_size","dilation","groups","_inputs","weight","bias","attribute","ints","Array","fill","transB","_inputs2","A","B","C","out_features","f","Error","num_features","spatial","_inputs3","size","_inputs4","perm","axis","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","ratio","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","alpha","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","floats","axes","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","ONNX","classCallCheck","layers","input_shapes","processing","st","calc","weights","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","initializer","dims","raw","rawData","weight_names","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","input","dim","tensorType","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","dimValue","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","local_names","local_values","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","toNumber","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","unprocessed_layers","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","iter","hasInputs","defined_inputs","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","unshift","_this$input_shapes$la","toArray","batch","in_channels","in_dims","ks","pad","group","output_size","out_dim","floor","ops_per_output","reduce","_this$input_shapes$la2","_this$input_shapes$la3","_this$input_shapes$la4","construct","toConsumableArray","dataProd","shapeProd","Number","reverse","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","maxLen","_i8","_inputs6","_i9","_inputs7","idx","max","indexOf","stringify","state","modelName","producerName","opsetVersion","onnx","newObj","_arr","indent","maxLength","metaInfo","_Object$keys","newMap","mutations","setFileName","setModel","modelProto","parseProto","opsetImport","version","setCode","parseCode","setCompileStatus","stat","setNodeInfo","actions","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_index_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_sass___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_index_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_sass___WEBPACK_IMPORTED_MODULE_0___default","./Model.js","./index.js","webpackContext","req","webpackContextResolve","e","resolve"],"mappings":"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","file":"js/app.41eea3c9.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/nnlab/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * The file enables `@/store/index.js` to import all vuex modules\n * in a one-shot manner. There should not be any reason to edit this file.\n */\n\nconst files = require.context('.', false, /\\.js$/);\nconst modules = {};\n\nfiles.keys().forEach((key) => {\n  if (key === './index.js') return;\n  modules[key.replace(/(\\.\\/|\\.js)/g, '')] = files(key).default;\n});\n\nexport default modules;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_vm._m(0),_c('div',{staticClass:\"container is-fluid\"},[_c('div',{staticClass:\"tile is-parent is-block-tablet is-flex-desktop has-background-white-ter\"},[_c('div',{staticClass:\"tile is-vertical is-parent is-4 has-background-white-ter\"},[_c('editor')],1),_c('div',{staticClass:\"tile is-vertical is-parent is-2 has-background-white-ter\"},[_c('div',{staticClass:\"tile is-child\"},[_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-content\"},[_c('p',{staticClass:\"subtitle\",staticStyle:{\"color\":\"#2980b9\"}},[_vm._v(\"\\n                OPS\\n              \")]),_c('p',{staticClass:\"title\",staticStyle:{\"color\":\"#2980b9\"}},[_vm._v(\"\\n                \"+_vm._s(_vm.opTotal)+\"\\n              \")])])]),_c('br'),_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-content\"},[_c('p',{staticClass:\"subtitle\",staticStyle:{\"color\":\"#27ae60\"}},[_vm._v(\"\\n                Params\\n              \")]),_c('p',{staticClass:\"title\",staticStyle:{\"color\":\"#27ae60\"}},[_vm._v(\"\\n                \"+_vm._s(_vm.paramTotal)+\"\\n              \")])])]),_c('br'),(_vm.nodeInfo.length > 0)?_c('div',{staticClass:\"panel card\",staticStyle:{\"max-height\":\"60vh\",\"overflow-y\":\"auto\"}},_vm._l((_vm.nodeInfo),function(layer,index){return _c('div',{key:index,staticClass:\"card\"},[_c('div',{staticClass:\"card-content\"},[_c('p',{staticClass:\"is-5 title\"},[_vm._v(\"\\n                  \"+_vm._s(layer.name)+\"\\n                \")]),_vm._l((layer.params),function(k,v){return _c('div',{key:v,staticClass:\"level is-marginless is-mobile subtitle\"},[_c('p',{staticClass:\"level-left is-6\"},[_vm._v(_vm._s(v))]),_c('p',{staticClass:\"level-right is-6\"},[_vm._v(_vm._s(k))])])})],2),_c('footer',{staticClass:\"card-footer\"},[_c('p',{staticClass:\"card-footer-item\",staticStyle:{\"color\":\"#2980b9\"},attrs:{\"href\":\"#\"}},[_vm._v(_vm._s(layer.numOps))]),_c('p',{staticClass:\"card-footer-item\",staticStyle:{\"color\":\"#27ae60\"},attrs:{\"href\":\"#\"}},[_vm._v(_vm._s(layer.numParams))])])])})):_vm._e()])]),_c('div',{staticClass:\"tile is-vertical is-auto\"},[_c('div',{staticClass:\"tile is-parent has-background-white-ter\"},[_c('model-graph')],1)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('nav',{staticClass:\"navbar has-background-white-ter\",attrs:{\"role\":\"navigation\",\"aria-label\":\"main navigation\"}},[_c('div',{staticClass:\"navbar-brand\"},[_c('a',{staticClass:\"navbar-item is-size-4\",attrs:{\"href\":\"/#\"}},[_vm._v(\"\\n        NNLab\\n        \")])])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tile is-child card has-background-white-bis\"},[_c('a',{staticClass:\"button\",staticStyle:{\"position\":\"absolute\"},on:{\"click\":_vm.exportSvg}},[_vm._v(\"Export\")]),_c('svg',{staticStyle:{\"min-height\":\"50vh\"},attrs:{\"id\":\"svg-canvas\"}},[_c('g')])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","function genUID() {\n  let uid;\n  uid  = Math.random().toString(36).substring(2, 15);\n  uid += Math.random().toString(36).substring(2, 15);\n  return uid;\n}\n\nfunction formatter(val) {\n  if (val > 1e9)\n    return (val/1e9).toFixed(2)+\"G\"\n  else if (val > 1e6)\n    return (val/1e6).toFixed(2)+\"M\"\n  else if (val > 1e3)\n    return (val/1e3).toFixed(2)+\"k\"\n  else\n    return val.toFixed(2)\n}\n\nexport default { genUID, formatter };","<template>\n  <div class=\"tile is-child card has-background-white-bis\">\n    <a class=\"button\" style=\"position:absolute\" v-on:click=\"exportSvg\">Export</a>\n    <svg style=\"min-height: 50vh;\" id='svg-canvas'><g/></svg>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nimport * as dagreD3 from 'dagre-d3';\nimport * as d3 from 'd3';\nimport util from '@/utils/util.js';\n\n//import FileSaver from 'file-saver';\n//import Blob from 'blueimp-canvas-to-blob';\nimport saveSvg from 'save-svg-as-png';\n\nconst mergeable_nodes = [\n  \"Relu\",\n  \"BatchNormalization\", \"LRN\",\n];\n\nconst name_map = {\n  \"BatchNormalization\": \"BN\",\n  \"AveragePool\": \"AvgPool\",\n  \"GlobalAveragePool\": \"GlobalAvgPool\"\n};\n\nconst page = {\n  name: 'ModelGraph',\n  computed: {\n    ...mapGetters([\n      'nodes'\n    ]),\n  },\n  methods: {\n    exportSvg: function () {\n      saveSvg.saveSvgAsPng(d3.select(\"svg\").node(), 'nnlab.png', {backgroundColor: '#fafafa'});\n    },\n  },\n  watch: {\n    nodes: function (newList, oldList) {  \n      let t = this;\n      function activBlock(parent, bbox, node) {\n        let  w, h, points;\n        w = bbox.width;\n        h = bbox.height;\n\n        let shapeSvg = parent.insert(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .attr(\"transform\", \"translate(\" + (-w/2) + \",\" + (-h * 1/2 + 3) + \")\");\n\n        let textSvg = parent.insert (\"text\")\n        .text(node.name)\n        .attr(\"x\", 0)\n        .attr(\"y\", h/10)\n        .attr('dominant-baseline',\"middle\")\n        .attr('text-anchor', \"middle\")\n        //.attr(\"transform\", \"translate(0,\"+h/10+\")\")\n        .style('cursor', 'pointer');\n\n        node.intersect = function(point) {\n          return dagreD3.intersect.rect(node, point);\n        };\n\n        function nodeClick () {\n          t.$store.commit('setNodeInfo', node.param_list);\n        }\n\n        shapeSvg.on(\"click\", nodeClick);\n        textSvg.on(\"click\", nodeClick);\n\n        return shapeSvg;\n      };\n\n      let nodes = [];\n      let edges = [];\n      let output_source = {};\n\n      let maxOps = 0;\n      let maxParams = 0;\n\n      for (let node of newList) {\n        // If no input / output set empty list\n        if (node.outputs === undefined) node.outputs = [];\n        if (node.inputs === undefined)  node.inputs = [];\n\n        if (node.numOps > maxOps) maxOps = node.numOps;\n        if (node.numParams > maxParams) maxParams = node.numParams;\n\n        // Generate unique id for this node\n        const uid  = util.genUID();\n        const name = node.op;\n\n        // Parse inputs and find parent nodes\n        let parent_nodes = {};\n        for (let inp_name in node.inputs) {\n          let parent_id = output_source[inp_name];          \n          parent_nodes[parent_id] = String(node.inputs[inp_name]).replace(/,/g, \"x\");\n        }\n\n        // Set the source for outputs produced by this node\n        for (let out_name of node.outputs)\n          output_source[out_name] = uid;\n\n        // If this node is a mergeable node, then find the source node\n        // and change name.\n        // Assuming mergeable nodes only have one input.\n        if (mergeable_nodes.includes(name)) {\n          if (name in name_map) name = name_map[name];\n\n          let parent_id = Object.keys(parent_nodes)[0];\n\n          // Change the source of outputs\n          for (let out_name of node.outputs)\n            output_source[out_name] = parent_id;\n\n          for (let n of nodes) {\n            if (n.data.id === parent_id) {\n              n.data.name += ' + '+name;\n              n.data.numOps += node.numOps;\n              n.data.numParams += node.numParams;\n              n.data.params.push({\n                name: name,\n                params: node.params,\n                numOps: util.formatter(node.numOps),\n                numParams: util.formatter(node.numParams)\n              });\n              break;\n            }\n          }\n          continue;\n        }\n\n        // Push nodes\n        if (name in name_map) name = name_map[name];\n        nodes.push({\n          data: {\n            id: uid,\n            name: name,\n            numOps: node.numOps,\n            numParams: node.numParams,\n            shape: 'activBlock',\n            params: [{\n              name: name,\n              params: node.params,\n              numOps: util.formatter(node.numOps),\n              numParams: util.formatter(node.numParams)\n            }],\n          }\n        });\n\n        // Push edges from parents\n        for (let parent_id in parent_nodes) {\n          edges.push({\n            data: {\n              id: util.genUID(),\n              name: parent_nodes[parent_id],\n              source: parent_id,\n              target: uid\n            }\n          });\n        }\n      }\n\n      var g = new dagreD3.graphlib.Graph().setGraph({\n        ranker: 'tight-tree',\n      });\n\n      for (let node of nodes) {\n        g.setNode(\n          node.data.id,\n          {\n            label: ' '.repeat(node.data.name.length),\n            name: node.data.name,\n            shape: node.data.shape,\n            ops  : node.data.numOps,\n            params: node.data.numParams,\n            param_list: node.data.params,\n          }\n        );\n      }\n      for (let edge of edges)\n        g.setEdge(\n          edge.data.source,\n          edge.data.target,\n          {\n            arrowhead: 'normal',\n            label: edge.data.name,\n            curve: d3.curveBasis,\n            labelpos: 'c',\n          }\n        );\n\n      var svg = d3.select(\"svg\");\n      svg.attr(\"height\", svg.node().parentNode.scrollHeight);\n      svg.attr(\"width\", svg.node().parentNode.scrollWidth);\n\n      var inner = svg.select(\"g\");\n\n      // Create the renderer\n      var render = new dagreD3.render();\n      render.shapes().activBlock = activBlock;\n      render(inner, g);\n\n      var padding = {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n      };\n\n      // when rendering complete, select all labels\n      svg.selectAll('g.edgeLabel').each(function() {\n        var labelGroup = d3.select(this);\n        var bbox = labelGroup.node().getBBox();\n        labelGroup.insert('rect', ':first-child')\n          .attr('x', bbox.x - padding.left)\n          .attr('y', bbox.y - padding.top)\n          .attr('width', bbox.width + padding.left + padding.right)\n          .attr('height', bbox.height + padding.top + padding.bottom)\n          .attr('rx', 2);\n      });\n\n      let opsData = {};\n      let paramsData = {};\n      let nodeHeight = 0;\n      for (let node_id of g.nodes()) {\n        let node = g.node(node_id);\n        if (!(node.y in opsData)) opsData[node.y] = 0;\n        if (!(node.y in paramsData)) paramsData[node.y] = 0;\n        opsData[node.y] += node.ops;\n        paramsData[node.y] += node.params;\n        nodeHeight = node.elem.getBBox().height;\n      }      \n      for (let k in opsData)\n        console.log(opsData[k]/maxOps);\n      opsData = Object.entries(opsData).map(([key, value]) => ({key,value}));\n      paramsData = Object.entries(paramsData).map(([key, value]) => ({key,value}));\n\n      let sort = (a, b) => {\n        a = parseFloat(a.key);\n        b = parseFloat(b.key);\n        console.log(a, b);\n        return a < b ? -1 : (a > b ? 1 : 0);\n      };\n\n      opsData.sort(sort);\n      paramsData.sort(sort);\n\n      if (opsData.length === 0) return;\n      let width = g._label.width;\n\n      let tooltip = inner.insert('g');\n\n      tooltip.append('line')\n        .attr('x1', -width/0.75)\n        .attr('y1', 0)\n        .attr('x2', -width*0.10)\n        .attr('y2', 0)\n        .style('stroke', '#2ecc71')\n        .style('stroke-width', 6)\n      tooltip.append('text')\n        .attr('x', -width*0.10 - 140)\n        .attr('y', -4)\n        .text(\"PARAMS\")\n        .style('font-size', '32px')\n        .style('font-weight', '500')\n        .style('fill', '#2ecc71')\n        .style('stroke', '#2ecc71')\n        .attr('dominant-baseline',\"baseline\")\n      tooltip.append('line')\n        .attr('x1', width + width*0.10)\n        .attr('y1', 0)\n        .attr('x2', width + width/0.75)\n        .attr('y2', 0)\n        .style('stroke', '#3498db')\n       .style('stroke-width', 6)\n      tooltip.append('text')\n        .attr('x', width + width*0.10 + 4)\n        .attr('y', -4)\n        .text(\"OPS\")\n        .style('font-weight', '500')\n        .style('font-size', '32px')\n        .style('fill', '#3498db')\n        .style('stroke', '#3498db')\n        .attr('dominant-baseline',\"baseline\")\n\n      let opsText = inner.insert('text')\n        .attr('x', width + width/0.75)\n        .attr('y', 0)\n        .text(\"\")\n        .style('opacity', 0)\n        .style('font-size', '32px')\n        .style('fill', '#3498db')\n        .attr('dominant-baseline',\"baseline\")\n\n      let paramsText = inner.insert('text')\n        .attr('x', -width/0.75)\n        .attr('y', 0)\n        .text(\"\")\n        .style('opacity', 0)\n        .style('font-size', '32px')\n        .style('fill', '#2ecc71')\n        .attr('dominant-baseline',\"baseline\")\n\n      let paramsTextOffset = paramsText.node().getBBox().width + 5;\n\n      let area, line;\n      let curve = d3.curveBasis;\n\n      area = d3.area()\n      .y1(d => d.key)\n      .x0(d => 0)\n      .y0(d => 0)\n      .x(d => width*d.value/(maxOps*0.75))\n      .curve(curve);\n\n      line = d3.line()\n      .y(d => d.key)\n      .x(d => width*d.value/(maxOps*0.75))\n      .curve(curve);\n\n      inner.insert(\"path\")\n      .datum(opsData)\n      .attr(\"d\", area)\n      .attr(\"fill\", \"#3498db\")\n      .attr(\"opacity\", 0.50)\n      .attr(\"transform\", \"translate(\" + width * 1.10 + \",0)\");\n\n      inner.insert(\"path\")\n      .datum(opsData)\n      .attr(\"d\", line)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#3498db\")\n      .attr(\"stroke-width\", \"4px\")\n      .attr(\"transform\", \"translate(\" + width * 1.10 + \",0)\");\n\n      area = d3.area()\n      .y1(d => d.key)\n      .x0(d=>0)\n      .y0(d=>0)\n      .x(d => width*d.value/(maxParams*0.75))\n      .curve(curve);\n\n      line = d3.line()\n      .y(d => d.key)\n      .x(d => width*d.value/(maxParams*0.75))\n      .curve(curve);\n\n      inner.insert(\"path\")\n      .datum(paramsData)\n      .attr(\"d\", area)\n      .attr(\"fill\", \"#2ecc71\")\n      .attr(\"opacity\", 0.50)\n      .attr(\"transform\", \"translate(\" + -width * 0.10 + \",0)\"+\"scale(-1, 1)\");\n\n      inner.insert(\"path\")\n      .datum(paramsData)\n      .attr(\"d\", line)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#2ecc71\")\n      .attr(\"stroke-width\", \"4px\")\n      .attr(\"transform\", \"translate(\" + -width * 0.10 + \",0)\"+\"scale(-1, 1)\");\n\n      svg\n      .on(\"mouseout\", function() {\n        tooltip.style(\"opacity\", null).style(\"opacity\", 0);\n        opsText.style(\"opacity\", null).style(\"opacity\", 0);\n        paramsText.style(\"opacity\", null).style(\"opacity\", 0);\n      })\n      .on(\"mousemove\", function() {\n        tooltip.style(\"opacity\", null).style(\"opacity\", 0.8);\n        opsText.style(\"opacity\", null).style(\"opacity\", 1);\n        paramsText.style(\"opacity\", null).style(\"opacity\", 1);\n\n        const mouse = d3.mouse(d3.select(\"svg g\").node());\n        const y = mouse[1];\n        let minDist = Infinity;\n        let matchingY = opsData[0].key;\n        let opsVal = opsData[0].value;\n        let paramVal = paramsData[0].value;\n        for (let d of opsData) {\n          let dist = Math.abs(y - d.key);\n          if (dist < minDist) {\n            minDist = dist;\n            matchingY = d.key;\n            opsVal = d.value;\n          }\n        }\n        minDist = Infinity;\n        for (let d of paramsData) {\n          let dist = Math.abs(y - d.key);\n          if (dist < minDist) {\n            minDist = dist;\n            matchingY = d.key;\n            paramVal = d.value;\n          }\n        }\n\n        tooltip.attr(\"transform\", null)\n        .attr(\"transform\", \"translate(0,\"+matchingY+\")\");\n\n        opsText.text(util.formatter(opsVal));\n        paramsText.text(util.formatter(paramVal));\n        \n        paramsTextOffset = paramsText.node().getBBox().width + 5\n        opsText.attr(\"transform\", null)\n        .attr(\"transform\", \"translate(5,\"+matchingY+\")\");\n        paramsText.attr(\"transform\", null)\n        .attr(\"transform\", \"translate(\"+-paramsTextOffset+\",\"+matchingY+\")\");\n      })\n      .on(\"mouseenter\", function() {\n        tooltip.style(\"opacity\", null).style(\"opacity\", 0.8);\n        opsText.style(\"opacity\", null).style(\"opacity\", 1);\n        paramsText.style(\"opacity\", null).style(\"opacity\", 1);\n\n      });\n      \n      // Center the graph\n      if (g.graph().width !== -Infinity) {\n        // Set up zoom support\n        var initialScale = svg.node().getBoundingClientRect().height / (inner.node().getBBox().height + nodeHeight);\n        var zoom = d3.zoom().on(\"zoom\", function() {\n          inner.attr(\"transform\", d3.event.transform);\n        });\n        svg.call(zoom);\n        console.log(\"Setting zoom\");\n        svg.call(zoom.transform,\n          d3.zoomIdentity\n          .translate((svg.node().parentNode.scrollWidth - g.graph().width * initialScale) / 2, nodeHeight/2)\n          .scale(initialScale)\n        );\n      }\n    },\n  },\n}\n\nexport default page;\n</script>\n\n<style>\n\ng.type-TK > rect {\n  fill: #00ffd0;\n}\n\n.label {\n  z-index: 1;\n  font-family: \"Ubuntu Mono\", monospace;\n}\n\n.node rect,\n.node circle,\n.node ellipse,\n.node polygon {\n  stroke: #333;\n  fill: #fff;\n  stroke-width: 1.5px;\n  z-index: -1;\n}\n\n.edgePath path {\n  stroke: #333;\n  fill: #333;\n  stroke-width: 2.5px;\n  cursor: pointer;\n}\n\n.edgeLabel rect {\n  fill: #fafafa;\n}\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModelGraph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModelGraph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModelGraph.vue?vue&type=template&id=fcf59852&\"\nimport script from \"./ModelGraph.vue?vue&type=script&lang=js&\"\nexport * from \"./ModelGraph.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ModelGraph.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tile is-child card has-background-white-ter\"},[_c('div',{staticClass:\"field has-addons is-marginless\"},[_c('div',{staticClass:\"control\"},[_c('div',{staticClass:\"file is-light\"},[_c('label',{staticClass:\"file-label\"},[_c('input',{ref:\"onnx_path\",staticClass:\"file-input\",attrs:{\"type\":\"file\"},on:{\"change\":_vm.setOnnx}}),_vm._m(0)])])]),_c('div',{staticClass:\"control is-expanded has-text-centered\"},[_c('label',{staticClass:\"label is-large\"},[_vm._v(_vm._s(_vm.fileName))])]),_c('div',{staticClass:\"control\"},[(_vm.compileStatus === \"done\")?_c('span',{staticClass:\"icon has-text-success is-medium\"},[_c('i',{staticClass:\"fas fa-circle\"})]):(_vm.compileStatus === \"processing\")?_c('span',{staticClass:\"icon has-text-warning is-medium\"},[_c('i',{staticClass:\"fas fa-circle\"})]):_c('span',{staticClass:\"icon has-text-danger is-medium\"},[_c('i',{staticClass:\"fas fa-circle\"})])])]),_c('codemirror',{staticClass:\"is-size-6.5\",attrs:{\"options\":_vm.cmOptions},model:{value:(_vm.code),callback:function ($$v) {_vm.code=$$v},expression:\"code\"}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"file-cta\"},[_c('span',{staticClass:\"file-icon\"},[_c('i',{staticClass:\"fas fa-upload\"})]),_c('span',{staticClass:\"file-label\"},[_vm._v(\"\\n              Upload ONNX\\n            \")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"tile is-child card has-background-white-ter\">\n    <div class=\"field has-addons is-marginless\">\n      <div class=\"control\">\n        <div class=\"file is-light\">\n          <label class=\"file-label\">\n            <input class=\"file-input\" type=\"file\" ref=\"onnx_path\" @change=\"setOnnx\">\n            <span class=\"file-cta\">\n              <span class=\"file-icon\">\n                <i class=\"fas fa-upload\"></i>\n              </span>\n              <span class=\"file-label\">\n                Upload ONNX\n              </span>\n            </span>\n          </label>\n        </div>\n      </div>\n      <div class=\"control is-expanded has-text-centered\">\n        <label class=\"label is-large\">{{fileName}}</label>\n      </div>\n      <div class=\"control\">\n          <span v-if='compileStatus === \"done\"' class=\"icon has-text-success is-medium\"><i class=\"fas fa-circle\"></i></span>\n          <span v-else-if='compileStatus === \"processing\"' class=\"icon has-text-warning is-medium\"><i class=\"fas fa-circle\"></i></span>\n          <span v-else class=\"icon has-text-danger is-medium\"><i class=\"fas fa-circle\"></i></span>\n      </div>\n    </div>\n    <codemirror v-model=\"code\" :options=\"cmOptions\" class=\"is-size-6.5\">\n    </codemirror>\n  </div>\n</template>\n\n<script>\nimport { codemirror } from 'vue-codemirror';\nimport 'codemirror/mode/javascript/javascript.js';\n\nimport { mapGetters } from 'vuex';\nconst protobuf = require('protobufjs');\n\nconst initialCode = `[\n  {\n    \"op\": \"Input\",\n    \"params\": {\n      \"size\": [1, 3, 224, 224]\n    },\n    \"outputs\": [\"data\"]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\"data\"],\n    \"params\": {\n      \"out_channels\": 64,\n      \"kernel_size\": [7, 7],\n      \"stride\": [2, 2],\n      \"padding\": [6, 6],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_conv0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_conv0_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 64,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_batchnorm0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_batchnorm0_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_relu0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"MaxPool\",\n    \"inputs\": [\n      \"resnetv15_relu0_fwd\"\n    ],\n    \"params\": {\n      \"kernel_size\": [3, 3],\n      \"stride\": [2, 2],\n      \"padding\": [2, 2]\n    },\n    \"outputs\": [\n      \"resnetv15_pool0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_pool0_fwd\"\n    ],\n    \"params\": {\n      \"out_channels\": 64,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage1_conv0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage1_conv0_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 64,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage1_batchnorm0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage1_batchnorm0_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage1_relu0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage1_relu0_fwd\"\n    ],\n    \"params\": {\n      \"out_channels\": 64,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage1_conv1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage1_conv1_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 64,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage1_batchnorm1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Add\",\n    \"inputs\": [\n      \"resnetv15_pool0_fwd\",\n      \"resnetv15_stage1_batchnorm1_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage1__plus0\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage1__plus0\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage1_activation0\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage1_activation0\"\n    ],\n    \"params\": {\n      \"out_channels\": 64,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage1_conv2_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage1_conv2_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 64,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage1_batchnorm2_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage1_batchnorm2_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage1_relu1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage1_relu1_fwd\"\n    ],\n    \"params\": {\n      \"out_channels\": 64,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage1_conv3_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage1_conv3_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 64,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage1_batchnorm3_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Add\",\n    \"inputs\": [\n      \"resnetv15_stage1_activation0\",\n      \"resnetv15_stage1_batchnorm3_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage1__plus1\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage1__plus1\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage1_activation1\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage1_activation1\"\n    ],\n    \"params\": {\n      \"out_channels\": 128,\n      \"kernel_size\": [1, 1],\n      \"stride\": [2, 2],\n      \"padding\": [0, 0],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage2_conv2_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage2_conv2_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 128,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage2_batchnorm2_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage1_activation1\"\n    ],\n    \"params\": {\n      \"out_channels\": 128,\n      \"kernel_size\": [3, 3],\n      \"stride\": [2, 2],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage2_conv0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage2_conv0_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 128,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage2_batchnorm0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage2_batchnorm0_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage2_relu0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage2_relu0_fwd\"\n    ],\n    \"params\": {\n      \"out_channels\": 128,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage2_conv1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage2_conv1_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 128,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage2_batchnorm1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Add\",\n    \"inputs\": [\n      \"resnetv15_stage2_batchnorm2_fwd\",\n      \"resnetv15_stage2_batchnorm1_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage2__plus0\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage2__plus0\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage2_activation0\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage2_activation0\"\n    ],\n    \"params\": {\n      \"out_channels\": 128,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage2_conv3_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage2_conv3_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 128,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage2_batchnorm3_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage2_batchnorm3_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage2_relu1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage2_relu1_fwd\"\n    ],\n    \"params\": {\n      \"out_channels\": 128,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage2_conv4_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage2_conv4_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 128,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage2_batchnorm4_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Add\",\n    \"inputs\": [\n      \"resnetv15_stage2_activation0\",\n      \"resnetv15_stage2_batchnorm4_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage2__plus1\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage2__plus1\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage2_activation1\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage2_activation1\"\n    ],\n    \"params\": {\n      \"out_channels\": 256,\n      \"kernel_size\": [1, 1],\n      \"stride\": [2, 2],\n      \"padding\": [0, 0],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage3_conv2_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage3_conv2_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 256,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage3_batchnorm2_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage2_activation1\"\n    ],\n    \"params\": {\n      \"out_channels\": 256,\n      \"kernel_size\": [3, 3],\n      \"stride\": [2, 2],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage3_conv0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage3_conv0_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 256,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage3_batchnorm0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage3_batchnorm0_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage3_relu0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage3_relu0_fwd\"\n    ],\n    \"params\": {\n      \"out_channels\": 256,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage3_conv1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage3_conv1_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 256,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage3_batchnorm1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Add\",\n    \"inputs\": [\n      \"resnetv15_stage3_batchnorm2_fwd\",\n      \"resnetv15_stage3_batchnorm1_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage3__plus0\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage3__plus0\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage3_activation0\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage3_activation0\"\n    ],\n    \"params\": {\n      \"out_channels\": 256,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage3_conv3_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage3_conv3_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 256,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage3_batchnorm3_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage3_batchnorm3_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage3_relu1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage3_relu1_fwd\"\n    ],\n    \"params\": {\n      \"out_channels\": 256,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage3_conv4_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage3_conv4_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 256,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage3_batchnorm4_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Add\",\n    \"inputs\": [\n      \"resnetv15_stage3_activation0\",\n      \"resnetv15_stage3_batchnorm4_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage3__plus1\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage3__plus1\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage3_activation1\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage3_activation1\"\n    ],\n    \"params\": {\n      \"out_channels\": 512,\n      \"kernel_size\": [1, 1],\n      \"stride\": [2, 2],\n      \"padding\": [0, 0],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage4_conv2_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage4_conv2_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 512,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage4_batchnorm2_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage3_activation1\"\n    ],\n    \"params\": {\n      \"out_channels\": 512,\n      \"kernel_size\": [3, 3],\n      \"stride\": [2, 2],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage4_conv0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage4_conv0_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 512,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage4_batchnorm0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage4_batchnorm0_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage4_relu0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage4_relu0_fwd\"\n    ],\n    \"params\": {\n      \"out_channels\": 512,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage4_conv1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage4_conv1_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 512,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage4_batchnorm1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Add\",\n    \"inputs\": [\n      \"resnetv15_stage4_batchnorm2_fwd\",\n      \"resnetv15_stage4_batchnorm1_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage4__plus0\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage4__plus0\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage4_activation0\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage4_activation0\"\n    ],\n    \"params\": {\n      \"out_channels\": 512,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage4_conv3_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage4_conv3_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 512,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage4_batchnorm3_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage4_batchnorm3_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage4_relu1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Conv\",\n    \"inputs\": [\n      \"resnetv15_stage4_relu1_fwd\"\n    ],\n    \"params\": {\n      \"out_channels\": 512,\n      \"kernel_size\": [3, 3],\n      \"stride\": [1, 1],\n      \"padding\": [2, 2],\n      \"dilation\": [1, 1],\n      \"groups\": 1,\n      \"bias\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage4_conv4_fwd\"\n    ]\n  },\n  {\n    \"op\": \"BatchNormalization\",\n    \"inputs\": [\n      \"resnetv15_stage4_conv4_fwd\"\n    ],\n    \"params\": {\n      \"num_features\": 512,\n      \"spatial\": false\n    },\n    \"outputs\": [\n      \"resnetv15_stage4_batchnorm4_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Add\",\n    \"inputs\": [\n      \"resnetv15_stage4_activation0\",\n      \"resnetv15_stage4_batchnorm4_fwd\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage4__plus1\"\n    ]\n  },\n  {\n    \"op\": \"Relu\",\n    \"inputs\": [\n      \"resnetv15_stage4__plus1\"\n    ],\n    \"outputs\": [\n      \"resnetv15_stage4_activation1\"\n    ]\n  },\n  {\n    \"op\": \"GlobalAveragePool\",\n    \"inputs\": [\n      \"resnetv15_stage4_activation1\"\n    ],\n    \"outputs\": [\n      \"resnetv15_pool1_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Flatten\",\n    \"inputs\": [\n      \"resnetv15_pool1_fwd\"\n    ],\n    \"params\": {\"axis\": 1},\n    \"outputs\": [\"flatten_170\"]\n  },\n  {\n    \"op\": \"Linear\",\n    \"inputs\": [\"flatten_170\"],\n    \"params\": {\n      \"out_features\": 1000,\n      \"bias\": true\n    },\n    \"outputs\": [\n      \"resnetv15_dense0_fwd\"\n    ]\n  },\n  {\n    \"op\": \"Output\",\n    \"inputs\": [\n      \"resnetv15_dense0_fwd\"\n    ]\n  }\n]`;\n\nexport default {\n  components: {\n    'codemirror': codemirror,\n  },\n  data () {\n    return {\n      //code: initialCode,\n      modifiedCode: initialCode,\n      cmOptions: {\n        // codemirror options\n        tabSize: 4,\n        mode: {name: \"application/json\", json: true},\n        theme: 'solarized',//base16-dark',\n        lineNumbers: true,\n        line: true,\n        extraKeys: {\n          'Shift-Enter': this.process,\n        }\n        // more codemirror options, 更多 codemirror 的高级配置...\n      }\n    }\n  },\n  mounted () {\n    this.$store.commit('setFileName', 'resnet18.onnx');\n    this.process();\n  },\n  computed: {\n    codemirror() { return this.$refs.myCm.codemirror; },\n    code: {\n      get: function () {\n        return this.$store.getters.code;\n      },\n      set: function (newValue) {\n        this.modifiedCode = newValue;\n      }\n    },\n    ...mapGetters([\n      'fileName',\n      'compileStatus'\n    ]),\n  },\n  methods: {\n    process() {\n      this.$store.commit('setCompileStatus', 'processing');\n      let modelDef = null;\n      try {\n        modelDef = JSON.parse(this.modifiedCode);\n        this.$store.commit('setCode', modelDef);\n      }\n      catch (error) {\n        this.$store.commit('setCompileStatus', 'error');\n        return;\n      }\n    },\n    setOnnx(ev) {\n      protobuf.load('onnx.proto', (err, root) => {\n        if (err) {\n          throw err;\n        }\n\n        const onnxRoot = root;\n        const file = ev.target.files[0];\n\n        const reader = new FileReader();\n\n        this.$store.commit('setCompileStatus', 'processing');\n        // set filename\n        this.$store.commit('setFileName', file.name);\n\n        // set reader onload to commit setModel\n        reader.onload = (event) => {\n          const buffer = new Uint8Array(event.currentTarget.result);\n          const ModelProto = onnxRoot.lookupType('onnx.ModelProto');\n          const onnxModel = ModelProto.decode(buffer);\n          this.$store.commit('setModel', onnxModel);\n        };\n        reader.readAsArrayBuffer(file);\n      });\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../../node_modules/codemirror/theme/solarized.css';\n@import '../../node_modules/codemirror/lib/codemirror.css';\n\n.vue-codemirror {\n  height: calc(100vh - 136px);\n  width: inherit;\n}\n\n.CodeMirror {\n  height: calc(100vh - 130px);\n  width: inherit;\n}\n\n.CodeMirror-scroll {\n  padding-bottom: 0;\n}\n/*\n.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {\n  position: absolute;\n  z-index: 6;\n  display: none;\n}\n.CodeMirror-vscrollbar {\n\t\tright: 0; top: 0;\n\t\toverflow-x: hidden;\n\t\toverflow-y: scroll;\n\t}\n\t.CodeMirror-hscrollbar {\n\t\tbottom: 0; left: 0;\n\t\toverflow-y: hidden;\n\t\toverflow-x: scroll;\n\t}\n\t.CodeMirror-scrollbar-filler {\n\t\tright: 0; bottom: 0;\n\t}\n\t.CodeMirror-gutter-filler {\n\t\tleft: 0; bottom: 0;\n\t}\n\n\t.CodeMirror-gutters {\n\t\tposition: absolute; left: 0; top: 0;\n\t\tpadding-bottom: 1px;\n\t\tz-index: 3;\n    //background-color: hsl(0, 0%, 29%);\n\t}\n\t.CodeMirror-gutter {\n\t\twhite-space: normal;\n\t\theight: 100%;\n\t\t-moz-box-sizing: content-box;\n\t\tbox-sizing: content-box;\n\t\t//padding-bottom: 30px;\n\t\t//margin-bottom: -32px;\n\t\tdisplay: inline-block;\n\t\t// Hack to make IE7 behave\n\t\t*zoom:1;\n\t\t*display:inline;\n\t}\n\t.CodeMirror-gutter-elt {\n\t\tposition: absolute;\n\t\tcursor: default;\n\t\tz-index: 4;\n\t}\n*/\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Editor.vue?vue&type=template&id=7adf18b3&\"\nimport script from \"./Editor.vue?vue&type=script&lang=js&\"\nexport * from \"./Editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Editor.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <nav class=\"navbar has-background-white-ter\" role=\"navigation\" aria-label=\"main navigation\">\n      <div class=\"navbar-brand\">\n        <a href=\"/#\" class=\"navbar-item is-size-4\">\n          NNLab\n          <!-- <span class=\"icon is-small\"><i class=\"fas fa-flask\"></i></span> -->\n        </a>\n      </div>\n    </nav>\n    <div class=\"container is-fluid\">\n      <div class=\"tile is-parent is-block-tablet is-flex-desktop has-background-white-ter\">\n        <div class=\"tile is-vertical is-parent is-4 has-background-white-ter\">\n          <editor/>\n        </div>\n        <div class=\"tile is-vertical is-parent is-2 has-background-white-ter\">\n          <div class=\"tile is-child\">\n            <div class=\"card\">\n              <div class=\"card-content\">\n                <p class=\"subtitle\" style=\"color: #2980b9\">\n                  OPS\n                </p>\n                <p class=\"title\" style=\"color: #2980b9\">\n                  {{opTotal}}\n                </p>\n              </div>\n            </div>\n            <br>\n            <div class=\"card\">\n              <div class=\"card-content\">\n                <p class=\"subtitle\" style=\"color: #27ae60\">\n                  Params\n                </p>\n                <p class=\"title\" style=\"color: #27ae60\">\n                  {{paramTotal}}\n                </p>\n              </div>\n            </div>\n            <br>\n            <div v-if=\"nodeInfo.length > 0\" class=\"panel card\" style=\"max-height: 60vh; overflow-y:auto;\">\n              <!-- <p class=\"panel-heading has-background-white-ter\">Layer Info</p> -->\n              <div v-for=\"(layer, index) in nodeInfo\" class=\"card\" :key=\"index\">\n                <div class=\"card-content\">\n                  <p class=\"is-5 title\">\n                    {{ layer.name }}\n                  </p>\n                  <div v-for=\"(k, v) in layer.params\" :key=\"v\" class=\"level is-marginless is-mobile subtitle\"> \n                    <p class=\"level-left is-6\">{{v}}</p>\n                    <p class=\"level-right is-6\">{{k}}</p>\n                  </div>\n                </div>\n                <footer class=\"card-footer\">\n                  <p href=\"#\" class=\"card-footer-item\" style=\"color: #2980b9\">{{ layer.numOps }}</p>\n                  <p href=\"#\" class=\"card-footer-item\" style=\"color: #27ae60\">{{ layer.numParams }}</p>\n                </footer>\n              </div>\n              <!--\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <p class=\"subtitle\" style=\"color: #27ae60\">\n                    Params\n                  </p>\n                  <p class=\"title\" style=\"color: #27ae60\">\n                    {{paramTotal}}\n                  </p>\n                </div>\n              </div>\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <p class=\"subtitle\" style=\"color: #27ae60\">\n                    Params\n                  </p>\n                  <p class=\"title\" style=\"color: #27ae60\">\n                    {{paramTotal}}\n                  </p>\n                </div>\n              </div>\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <p class=\"subtitle\" style=\"color: #27ae60\">\n                    Params\n                  </p>\n                  <p class=\"title\" style=\"color: #27ae60\">\n                    {{paramTotal}}\n                  </p>\n                </div>\n              </div>\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <p class=\"subtitle\" style=\"color: #27ae60\">\n                    Params\n                  </p>\n                  <p class=\"title\" style=\"color: #27ae60\">\n                    {{paramTotal}}\n                  </p>\n                </div>\n              </div>\n              -->\n            </div>\n          </div>\n        </div>\n        <div class=\"tile is-vertical is-auto\">\n          <div class=\"tile is-parent has-background-white-ter\">\n              <model-graph/>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport ModelGraph from '@/components/ModelGraph.vue';\nimport Editor from '@/components/Editor.vue';\nimport util from '@/utils/util.js';\n\nimport { mapGetters } from 'vuex';\n\nconst protobuf = require('protobufjs');\n\nconst page = {\n  name: 'Overview',\n  data: () => {\n    return {\n      loading: false,\n      loaded: false,\n    };\n  },\n  components: {\n    'model-graph': ModelGraph,\n    'editor': Editor,\n  },\n  computed: {\n    opTotal: function () {\n      let x = 0;\n      for (let i of this.totalOps) x += i;\n      return util.formatter(x);\n    },\n    paramTotal: function () {\n      let x = 0;\n      for (let i of this.totalParams) x += i;\n      return util.formatter(x);\n    },\n    ...mapGetters([\n      'inputs',\n      'outputs',\n      'metaInfo',\n      'fileName',\n      'totalOps',\n      'totalParams',\n      'nodeInfo'\n    ]),\n  },\n  methods: {\n    setOnnx(ev) {\n      protobuf.load('onnx.proto', (err, root) => {\n        if (err) {\n          throw err;\n        }\n\n        const onnxRoot = root;\n        const file = ev.target.files[0];\n\n        const reader = new FileReader();\n\n        this.loading = true;\n        // set filename\n        this.$store.commit('setFileName', file.name);\n\n        // set reader onload to commit setModel\n        reader.onload = (event) => {\n          const buffer = new Uint8Array(event.currentTarget.result);\n          const ModelProto = onnxRoot.lookupType('onnx.ModelProto');\n          const onnxModel = ModelProto.decode(buffer);\n          this.$store.commit('setModel', onnxModel);\n          this.loading = false;\n          this.loaded = true;\n        };\n        reader.readAsArrayBuffer(file);\n      });\n    },\n  },\n};\nexport default page;\n</script>\n\n<style lang=\"sass\">\n  @import './assets/theme.sass'\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=ccd9eeba&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=sass&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport Vuex from 'vuex';\n\nimport modules from './modules';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  modules,\n  strict: process.env.NODE_ENV !== 'production',\n});\n","import Vue from 'vue';\nimport VueApexCharts from 'vue-apexcharts';\nimport VueCytoscape from 'vue-cytoscape';\nimport 'vue-cytoscape/dist/vue-cytoscape.css';\n\nimport App from '@/App.vue';\nimport store from '@/store';\n\nVue.config.productionTip = false;\nVue.use(VueApexCharts)\nVue.use(VueCytoscape)\n\nnew Vue({\n  store,\n  render: h => h(App),\n}).$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModelGraph.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModelGraph.vue?vue&type=style&index=0&lang=css&\"","const Int64LE = require(\"int64-buffer\").Int64LE;\n\nfunction protoGenNode(nodeProto, inputs, input_names) {\n  let node = {};\n\n  let opType = nodeProto.opType;\n  node['op'] = opType;\n  node['outputs'] = nodeProto.output;\n\n  if (opType === \"Conv\") {\n    let [data, weight, bias] = inputs;\n    let out_channels, stride, kernel_size, padding, dilation, groups;\n\n    bias = !(bias === undefined);\n    out_channels = weight[0];\n\n    for (let x of nodeProto.attribute) {\n      if (x.name === \"strides\") stride = x.ints;\n      else if (x.name === \"kernel_shape\") kernel_size = x.ints;\n      else if (x.name === \"pads\") {\n        padding = [];\n        for (let i = 0; i < x.ints.length/2; i += 1)\n          padding.push(x.ints[i] + x.ints[i + x.ints.length/2]);\n      }\n      else if (x.name === \"dilations\") dilation = x.ints;\n      else if (x.name === \"group\") groups = x.i\n    }\n\n    if (dilation === undefined) dilation = Array(stride.length).fill(1);\n    if (padding  === undefined) padding  = Array(stride.length).fill(0);\n    if (groups   === undefined) groups   = 1;\n\n    node['params'] = {\n      out_channels,\n      kernel_size,\n      stride,\n      padding,\n      dilation,\n      groups,\n      bias\n    };\n    node['inputs'] = [input_names[0]];\n  }\n  else if (opType === \"AveragePool\" || opType === \"MaxPool\") {\n    let kernel_size, stride, padding;\n\n    for (let x of nodeProto.attribute) {\n      if (x.name === \"strides\") stride = x.ints;\n      else if (x.name === \"kernel_shape\") kernel_size = x.ints;\n      else if (x.name === \"pads\") {\n        padding = [];\n        for (let i = 0; i < x.ints.length/2; i += 1)\n          padding.push(x.ints[i] + x.ints[i + x.ints.length/2]);\n      }\n    }\n\n    if (stride  === undefined) stride  = Array(kernel_size.length).fill(1);\n    if (padding === undefined) padding = Array(kernel_size.length).fill(0);\n\n    node['params'] = { kernel_size, stride, padding };\n    node['inputs'] = [input_names[0]];\n  }\n  else if (opType === \"GlobalAveragePool\") {\n    node['inputs'] = input_names;\n  }\n  else if (opType === \"Gemm\") {\n    // res = (A * B) + C\n    // If A is undefined, but B and C are defined, it is a FC\n    // Otherwise treat is as Gemm;\n    let [A, B, C] = inputs;\n\n    let transA, transB, alpha, beta;\n\n    transA = 0;\n    transB = 0;\n    alpha  = 1;\n    beta   = 1;\n    for (let x of nodeProto.attribute) {\n      if (x.name === \"transA\") transA = x.i;\n      else if (x.name === \"transB\") transB = x.i;\n      else if (x.name === \"alpha\") alpha = x.f;\n      else if (x.name === \"beta\") beta = x.f;\n    }\n\n    node['inputs'] = []\n    if (A === undefined) {\n      // Linear layer\n      node['op'] = 'Linear';\n      let out_features, bias;\n      out_features = (transB) ? B[0] : B[1];\n      bias = !(C === undefined);\n      node['params'] = {out_features, bias};\n      node['inputs'].push(input_names[0]);\n    } else {\n      throw new Error(\"Gemm for layers other than linear not supported rn\");\n      if (A === undefined) node['inputs'].push(input_names[0]);\n      if (B === undefined) node['inputs'].push(input_names[1]);\n      if (C === undefined) node['inputs'].push(input_names[2]);\n      node['params'] = {transA, transB, alpha, beta};\n    }\n  }\n  else if (opType === \"BatchNormalization\") {\n    let [data, scale, bias, mean, v] = inputs;\n\n    let num_features, spatial;\n\n    spatial = true;\n    for (let x of nodeProto.attribute)\n      if (x.name === \"spatial\" && x.i === 0) spatial = false;\n\n    num_features = scale[0];\n\n    node['params'] = {num_features, spatial};\n    node['inputs'] = [input_names[0]];\n  }\n  else if (opType === \"LRN\") {\n    let size;\n    for (let x of nodeProto.attribute)\n      if (x.name === \"size\") size = x.i;\n    node['params'] = { size };\n    node['inputs'] = [input_names[0]];\n  }\n  else if (opType === \"Reshape\") {\n      let [data, shape] = inputs;\n      node['params'] = { shape };\n      node['inputs'] = [input_names[0]];\n  }\n  else if (opType === \"Transpose\") {\n    let perm;\n    for (let x of nodeProto.attribute)\n      if (x.name === \"perm\") perm = x.ints;\n    if (perm !== undefined) node['params'] = { perm };\n    node['inputs'] = [input_names[0]];\n  }\n  else if (opType === \"Concat\" || opType === \"Softmax\") {\n    let axis;\n    axis = 1;\n    for (let x of nodeProto.attribute)\n      if (x.name === \"axis\") axis = x.i;\n    node['params'] = { axis };\n    node['inputs'] = input_names;\n  }\n  else if (opType === \"Dropout\") {\n    let ratio;\n    for (let x of nodeProto.attribute)\n      if (x.name === \"ratio\") ratio = x.f;\n    node['params'] = { ratio };\n    node['inputs'] = [input_names[0]];\n  }\n  else if (opType === \"Relu\" || opType === \"Sum\" || opType === \"Add\" || opType === \"Mul\") {\n    node['inputs'] = input_names;\n  }\n  else if (opType === \"LeakyRelu\") {\n    let alpha = 0;\n    for (let x of nodeProto.attribute)\n      if (x.name === \"alpha\") alpha = x.f;\n    node['params'] = { alpha };\n    node['inputs'] = input_names;\n  }\n  else if (opType === \"ImageScaler\") {\n    let bias;\n    let scale = 1;\n    for (let x of nodeProto.attribute)\n      if (x.name === \"bias\") bias = x.floats;\n      else if (x.name === \"scale\") scale = x.f;\n    node['params'] = { bias, scale };\n    node['inputs'] = input_names;\n  }\n  else if (opType === \"Unsqueeze\") {\n    let axes;\n    for (let x of nodeProto.attribute)\n      if (x.name === \"axes\") axes = x.ints;\n    node['params'] = { axes };\n    node['inputs'] = input_names;\n  }\n  else if (opType === \"Flatten\") {\n    let axis = 1;\n    for (let x of nodeProto.attribute)\n      if (x.name === \"axis\") axes = x.i;\n    node['params'] = { axis };\n    node['inputs'] = input_names;\n  }\n  else {\n    console.log(\"Not implemented for \" + opType);\n  }\n\n  return node;\n}\n\n// ONNX parser class\nclass ONNX {\n\n  constructor() {\n    // List of parsed layers that can be JSONified to display\n    this.layers = [];\n    // Object to store input to shape mappings to create graph\n    this.input_shapes = {};\n    this.processing = false;\n  }\n\n  parseCode(model, st) {\n    this.processing = true;\n    this.layers = model;\n    try {\n      this.calc({});\n      st.compileStatus = \"done\";\n    } catch (err) {\n      st.compileStatus = \"error\";\n    }\n  }\n\n  parseProto(model, st) {\n    this.processing = true;\n    this.layers = [];\n    this.input_shapes = {};\n\n    let weights = {};\n    for (let initializer of model.graph.initializer) {\n      let shape = initializer.dims;\n      let raw   = initializer.rawData;\n      weights[initializer.name] = {shape,  raw};\n    }\n    const weight_names = Object.keys(weights);\n\n    let inputs = {};\n    for (let input of model.graph.input) {\n      if (weight_names.includes(input.name)) continue;\n      const dim = input.type.tensorType.shape.dim;\n      let shape = [];\n      for (let x of dim) shape.push(x.dimValue);\n      inputs[input.name] = shape;\n      this.layers.push({\n        op: \"Input\",\n        outputs: [String(input.name)],\n        params: {\n          size: shape,\n        },\n      });\n    }\n\n    for (let node of model.graph.node) {\n      let local_names = [];\n      let local_values = [];\n      for (let input of node.input) {\n        if (!weight_names.includes(input)) {\n          local_names.push(input);\n          local_values.push(inputs[input]);\n        }\n        else {\n          local_names.push(input);\n          local_values.push(weights[input].shape);\n          if (node.opType === 'Reshape') {\n            let raw = weights[input].raw;\n            let val = [];\n            for (let j = 0; j < raw.length; j = j + 8) {\n              val.push((new Int64LE(raw.slice(j, j + 8))).toNumber());\n            }\n            local_names.push(input);\n            local_values.push(val);\n          }\n        }\n      }\n\n      this.layers.push(protoGenNode(\n        node,\n        local_values,\n        local_names\n      ));\n    }\n\n    for (let output of model.graph.output) {\n      const dim = output.type.tensorType.shape.dim;\n      this.layers.push({\n        op: \"Output\",\n        inputs: [String(output.name)],\n      });\n    }\n\n    try {\n      this.calc(weights);\n      st.compileStatus = \"done\";\n    } catch (err) {\n      console.log(err);\n      st.compileStatus = \"error\";\n    }\n  }\n\n  calc(weights) {\n    let weight_names = Object.keys(weights);\n    this.input_shapes = {};\n\n    let unprocessed_layers = [];\n    for (let layer of this.layers) unprocessed_layers.push(layer);\n\n    let iter = 0;\n    while (unprocessed_layers.length > 0) {\n      let layer = unprocessed_layers.shift();\n\n      // Check to make sure we have the input available\n      let hasInputs = true;\n      let defined_inputs = Object.keys(this.input_shapes);\n      if (layer.inputs !== undefined) {\n        for (let input of layer.inputs) {\n          hasInputs = hasInputs && (defined_inputs.includes(input));\n          if (!hasInputs) {\n            if (weight_names.includes(input)) {\n              hasInputs = true\n              this.layers.unshift({\n                op: \"Input\",\n                outputs: [String(input)],\n                params: {\n                  size: weights[input].shape,\n                },\n                numOps: 0,\n                numParams: 0,\n              });\n              this.input_shapes[input] = weights[input].shape;\n            }\n          }\n        }\n      }\n      if (!hasInputs) {\n        iter += 1;\n        if (iter > 3) break;\n        unprocessed_layers.push(layer);\n        continue;\n      }\n\n      let ops = 0;\n      let params = 0;\n      if (layer.op === \"Input\") {\n        this.input_shapes[layer.outputs[0]] = layer.params.size;\n      }\n      else if (layer.op === \"Conv\") {\n        let [batch, in_channels, ...in_dims] = this.input_shapes[layer.inputs[0]];\n        let ks = layer.params.kernel_size;\n        let stride = layer.params.stride;\n        let pad = layer.params.padding;\n        let dilation = layer.params.dilation;\n        let group = layer.params.groups;\n        let bias = layer.params.bias;\n\n        let output_size = [batch, layer.params.out_channels];\n        for (let i in in_dims) {\n          let out_dim;\n          out_dim = (in_dims[i] + pad[i] - (dilation[i] * (ks[i] - 1)) - 1);\n          out_dim = Math.floor((out_dim / stride[i]) + 1);\n          output_size.push(out_dim);\n        }\n        this.input_shapes[layer.outputs[0]] = output_size;\n\n        let ops_per_output;\n        ops_per_output = 2 * ((in_channels / group) * ks.reduce((a, b) => a*b));\n        ops_per_output = ops_per_output - 1;\n        if (bias) ops_per_output += 1;\n        ops = output_size.reduce((a, b) => a*b) * ops_per_output;\n\n        params = ks.reduce((a, b) => a*b);\n        params *= (in_channels / group);\n        params *= layer.params.out_channels;\n        if (bias) params += layer.params.out_channels;\n      }\n      else if (layer.op === \"MaxPool\" || layer.op === \"AveragePool\") {\n        let [batch, in_channels, ...in_dims] = this.input_shapes[layer.inputs[0]];\n        let ks = layer.params.kernel_size;\n        let stride = layer.params.stride;\n        let pad = layer.params.padding;\n\n        let output_size = [batch, in_channels];\n        for (let i in in_dims) {\n          let out_dim;\n          out_dim = in_dims[i] + pad[i] - ks[i];\n          out_dim = Math.floor((out_dim / stride[i]) + 1);\n          output_size.push(out_dim);\n        }\n\n        this.input_shapes[layer.outputs[0]] = output_size;\n        if (layer.op === \"MaxPool\")\n          this.input_shapes[layer.outputs[1]] = output_size;\n\n        let ops_per_output;\n        ops_per_output = ks.reduce((a, b) => a*b) - 1;\n        ops = output_size.reduce((a, b) => a*b) * ops_per_output;\n      }\n      else if (layer.op === \"GlobalAveragePool\") {\n        let [batch, in_channels, ...in_dims] = this.input_shapes[layer.inputs[0]];\n        let output_size = [batch, in_channels];\n        for (let i in in_dims) output_size.push(1);\n        this.input_shapes[layer.outputs[0]] = output_size;\n        let ops_per_output;\n        ops_per_output = in_dims.reduce((a, b) => a*b) - 1;\n        ops = output_size.reduce((a, b) => a*b) * ops_per_output;\n      }\n      else if (layer.op === \"Linear\") {\n        let [batch, in_channels] = this.input_shapes[layer.inputs[0]];\n        let out_features = layer.params.out_features;\n        let bias = layer.params.bias;\n\n        let output_size = [batch, out_features];\n        this.input_shapes[layer.outputs[0]] = output_size;\n\n        let ops_per_output;\n        ops_per_output = (in_channels * 2 - 1);\n        if (bias) ops_per_output += 1;\n        ops = (batch * out_features) * ops_per_output ;\n\n        params = (in_channels * out_features);\n        if (bias) params += out_features;\n      }\n      else if (layer.op === \"BatchNormalization\") {\n        let input = this.input_shapes[layer.inputs[0]];\n\n        this.input_shapes[layer.outputs[0]] = input;\n\n        ops = input.reduce((a, b) => a*b) * 2;\n        params = 4 * input[1];\n      }\n      else if (layer.op === \"LRN\") {\n        let size = layer.params.size;\n        let input = this.input_shapes[layer.inputs[0]];\n\n        this.input_shapes[layer.outputs[0]] = input;\n\n        let ops_per_output;\n        ops_per_output = size + (size - 1) //Squared sum\n        ops_per_output += 4; //constant mul, add, exp, div\n\n        ops = ops_per_output * input.reduce((a, b) => a*b);\n        params = 4;\n      }\n      else if (layer.op === \"Relu\") {\n        let input = this.input_shapes[layer.inputs[0]];\n        this.input_shapes[layer.outputs[0]] = input;\n        ops = input.reduce((a, b) => a*b);\n      }\n      else if (layer.op === \"LeakyRelu\" || layer.op === \"ImageScaler\") {\n        let input = this.input_shapes[layer.inputs[0]];\n        this.input_shapes[layer.outputs[0]] = input;\n        ops = input.reduce((a, b) => a*b) * 2;\n      }\n      else if (layer.op === \"Reshape\") {\n        let input = this.input_shapes[layer.inputs[0]];\n        let shape = new Array(...layer.params.shape);\n        for (let i in shape) if (shape[i] === 0) shape[i] = input[i];\n        let dataProd = input.reduce((a, b) => a*b);\n        let shapeProd = shape.reduce((a, b) => a*b);\n        if (dataProd !== shapeProd)\n          throw new Error(\"Reshape doesn't match\");\n        for (let i in shape)\n          if (shape[i] === -1)\n            shape[i] = (dataProd / (-1 * shapeProd));\n        this.input_shapes[layer.outputs[0]] = shape;\n      }\n      else if (layer.op === \"Transpose\") {\n        let input = this.input_shapes[layer.inputs[0]];\n        let perm = Array(input.length);\n        for (let i in input) perm[i] = Number(i);\n        perm = perm.reverse();\n        if (layer.params !== undefined && layer.params.perm !== undefined)\n          perm = layer.params.perm;\n\n        let output_size = [];\n        for (let i in input)\n          output_size[i] = input[perm[i]];\n\n        this.input_shapes[layer.outputs[0]] = new Array(...output_size);\n      }\n      else if (layer.op === \"Concat\") {\n        let inputs = [];\n        for (let input of layer.inputs)\n          inputs.push(this.input_shapes[input]);\n        let axis = layer.params.axis;\n        let output_size = new Array(...inputs[0]);\n        for (let x of inputs.slice(1)) output_size[axis] += x[axis];\n        this.input_shapes[layer.outputs[0]] = output_size;\n      }\n      else if (layer.op === \"Dropout\") {\n        let input = this.input_shapes[layer.inputs[0]];\n        this.input_shapes[layer.outputs[0]] = input;\n        this.input_shapes[layer.outputs[1]] = input;\n        params = 1;\n      }\n      else if (layer.op === \"Softmax\") {\n        let input = this.input_shapes[layer.inputs[0]];\n        let axis = layer.params.axis;\n        this.input_shapes[layer.outputs[0]] = input;\n        ops = (input.slice(axis).reduce((a, b) => (a * b)) * 3);\n      }\n      else if (layer.op === \"Sum\" || layer.op === \"Add\" || layer.op === \"Mul\") {\n        let inputs = [];\n        for (let input of layer.inputs)\n          inputs.push(this.input_shapes[input]);\n\n        let maxLen = 0;\n        for (let x of inputs) if (x.length > maxLen) maxLen = x.length;\n        let output_size = Array(maxLen);\n        output_size.fill(1);\n        for (let x of inputs) {\n            let idx = output_size.length - x.length;\n            for (let i in x) {\n              output_size[idx] = (output_size[idx] > x[i]) ? output_size[idx] : x[i];\n              idx += 1;\n            }\n        }\n\n        this.input_shapes[layer.outputs[0]] = output_size;\n        ops = output_size.reduce((a, b) => a*b) * inputs.length;\n      }\n      else if (layer.op === \"Unsqueeze\") {\n        let input = this.input_shapes[layer.inputs[0]];\n        let axes = layer.params.axes;\n        let maxLen = Math.max(...axes) + 1;\n        if (input.length > maxLen) maxLen = input.length;\n        let output_size = Array(maxLen);\n        output_size.fill(1);\n        let j = 0;\n        for (let i = 0; i < maxLen; i++) {\n          if (axes.indexOf(i) === -1) {\n            output_size[i] = input[j];\n            j += 1;\n          }\n        }\n        this.input_shapes[layer.outputs[0]] = output_size;\n      }\n      else if (layer.op === \"Flatten\") {\n        let input = this.input_shapes[layer.inputs[0]];\n        let axis = layer.params.axis;\n        let output_size = Array(2);\n\n        output_size[0] = 1;\n        for (let i = 0; i < axis; i++) {\n          output_size[0] *= input[i]\n        }\n\n        output_size[1] = 1;\n        for (let i = axis; i < input.length; i++) {\n          output_size[1] *= input[i]\n        }\n\n        this.input_shapes[layer.outputs[0]] = output_size\n      }\n      else if (layer.op === \"Output\"){\n      }\n      else {\n        console.log(\"Not implemented for \" + layer.op);\n        throw new Error(layer.op + \" Not valid\");\n      }\n\n      layer['numOps'] = ops;\n      layer['numParams'] = params;\n    }\n    this.processing = false;\n  }\n}\n\nexport default ONNX;\n","import ONNX from '@/utils/onnx.js';\n\nconst stringify = require(\"json-stringify-pretty-compact\");\n\nconst state = {\n  fileName: undefined,\n  modelName: '',\n  producerName: '',\n  opsetVersion: '',\n  compileStatus: 'done',\n  nodeInfo: [],\n  onnx: new ONNX(),\n};\n\nconst getters = {\n  fileName: st => st.fileName,\n  compileStatus: st => st.compileStatus,\n  nodeInfo: st => st.nodeInfo,\n  code: st => {\n    return stringify(st.onnx.layers.map((d, i) => {\n      let newObj = {};\n      for (let k of ['op', 'inputs', 'params', 'outputs']) {\n        if (d[k] === undefined) continue;\n        //if (k === 'numOps' || k === 'numParams') continue;\n        newObj[k] = d[k];\n      }\n      return newObj;\n    }), {indent: 2, maxLength: 30});\n  },\n  metaInfo: st => {\n    return [\n      {\n        name: 'Model Name',\n        value: st.modelName,\n      },\n      {\n        name: 'Producer Name',\n        value: st.producerName,\n      },\n      {\n        name: 'Opset Version',\n        value: st.opsetVersion\n      }\n    ];\n  },\n  nodes: st => {\n    if (st.onnx.processing === true) return [];\n    return st.onnx.layers.map((d, i) => {\n      let newObj = {};\n      for (let k of Object.keys(d)) {\n        newObj[k] = d[k];\n        if (k === 'inputs') {\n          let newMap = {};\n          for (let input of d[k]) {\n            newMap[input] = st.onnx.input_shapes[input];\n          }\n          newObj[k] = newMap;\n        }\n      }\n      return newObj;\n    });\n  },\n  totalOps: st => {\n    if (st.onnx.processing === true) return [];\n    return st.onnx.layers.map((d, i) => {\n      return d.numOps;\n    });\n  },//String(st.totalOps / 1e9) + ' G',\n  totalParams: st => {\n    if (st.onnx.processing === true) return [];\n    return st.onnx.layers.map((d, i) => {\n      return d.numParams;\n    });\n  },\n};\n\nconst mutations = {\n  setFileName: (st, fileName) => {\n    st.fileName = fileName;\n  },\n  setModel: (st, modelProto) => {\n    st.onnx.parseProto(modelProto, st);\n    st.modelName = modelProto.graph.name;\n    st.producerName = modelProto.producerName;\n    st.opsetVersion = modelProto.opsetImport[0].version;\n  },\n  setCode: (st, modelDef) => {\n    st.onnx.parseCode(modelDef, st);\n  },\n  setCompileStatus: (st, stat) => {\n    st.compileStatus = stat;\n  },\n  setNodeInfo: (st, nodeInfo) => {\n    st.nodeInfo = nodeInfo\n  },\n};\n\nconst actions = {\n};\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions,\n};\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/index.js??ref--9-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=sass&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/index.js??ref--9-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=sass&\"","var map = {\n\t\"./Model.js\": \"bf20\",\n\t\"./index.js\": \"2a74\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"d307\";"],"sourceRoot":""}